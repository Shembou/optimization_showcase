services:
  traefik:
    image: traefik
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080" # Re-added for debugging
      - "443:443/tcp"
      - "443:443/udp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./certs:/certs:ro
      - ./dynamic:/dynamic:ro
    networks:
      - proxy
    command:
      # EntryPoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http3=true"

      # Attach the static configuration tls.yaml file that contains the tls configuration settings
      - "--providers.file.filename=/dynamic/tls.yaml"

      # Providers 
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxy"

      # API & Dashboard 
      - "--api.dashboard=true"
      - "--api.insecure=false"

      # Observability 
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.dashboard.rule=Host(`dashboard.localhost`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"

  http2_api:
    build:
      context: ./backend/http
      args:
        - API_PORT=3000
        - GRPC_PORT=3003
    container_name: http2
    networks:
      - proxy
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.http2_api.rule=Host(`http2_api.localhost`)"
      - "traefik.http.routers.http2_api.entrypoints=websecure"
      - "traefik.http.routers.http2_api.service=http2_api_service"
      - "traefik.http.services.http2_api_service.loadbalancer.server.port=3000"
      - "traefik.http.services.http2_api_service.loadbalancer.server.scheme=https"
      - "traefik.http.services.http2_api_service.loadbalancer.serverstransport=insecure@file"

      - "traefik.http.routers.grpc_api.rule=Host(`grpc_api.localhost`)"
      - "traefik.http.routers.grpc_api.entrypoints=websecure"
      - "traefik.http.routers.grpc_api.service=grpc_service"
      - "traefik.http.services.grpc_service.loadbalancer.server.port=3003"
      - "traefik.http.services.grpc_service.loadbalancer.server.scheme=https"
      - "traefik.http.services.grpc_service.loadbalancer.serverstransport=insecure@file"
    environment:
      - API_PORT=3000
      - GRPC_PORT=3003


  # http1_1_api:
  #   build:
  #     context: ./backend/http_api
  #     args:
  #       - PORT=3004
  #   container_name: http1_1_api
  #   networks:
  #     - proxy
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.http1_1_api.rule=Host(`http1_1_api.localhost`)"
  #     - "traefik.http.routers.http1_1_api.entrypoints=websecure"
  #     - "traefik.http.services.http1_1_api.loadbalancer.server.scheme=https"
  #     - "traefik.http.services.http1_1_api.loadbalancer.server.port=3004"
  #     - "traefik.http.services.http1_1_api.loadbalancer.serverstransport=insecure@file"
  #   volumes:
  #     - ./certs:/certs:ro
  #   environment:
  #     - PORT=3004
  #     - PROTOCOL=http/1.1
  #     - ENVIRONMENT=PRODUCTION

  web:
    build:
      context: ./frontend/web
      args:
        - PORT=443
    container_name: web
    networks:
      - proxy
    # Add this to debug - remove after fixing
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.localhost`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.services.web.loadbalancer.server.scheme=https"
      - "traefik.http.services.web.loadbalancer.server.port=443"
      - "traefik.http.services.web.loadbalancer.serverstransport=insecure@file"
    environment:
      - PORT=443
      - HTTP_API_ENDPOINT=http2_api.localhost
      - WEB_GRPC_ENDPOINT=grpc_api.localhost

#   TODO: WAIT FOR OFFICIAL SUPPORT OF HTTP3/QUIC. AT LEAST WEBTRANSPORT. CURRENTLY ITS A RABBITHOLE
#   http_quic_api:
#     build:
#       context: ./backend/http_quic_api
#       args:
#         - PORT=4433
#     container_name: http_quic_api
#     networks:
#       - proxy
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.http_quic_api.rule=Host(`http_quic_api.localhost`)"
#       - "traefik.http.routers.http_quic_api.entrypoints=websecure"
#       - "traefik.http.services.http_quic_api.loadbalancer.server.scheme=https"
#       - "traefik.http.services.http_quic_api.loadbalancer.server.port=4433"
#       - "traefik.http.services.http_quic_api.loadbalancer.serverstransport=insecure@file"
#     environment:
#       - PORT=4433
networks:
  proxy:
    name: proxy
